{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","_useState","useState","_useState2","Object","slicedToArray","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","_useState5","_useState6","enteredDate","setEnteredDate","react_default","a","createElement","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","placeholder","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","components_NewExpense_ExpenseForm","enteredExpenseData","objectSpread","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","components_UI_Card","components_Expenses_ExpenseDate","ExpensesList","items","length","map","expense","components_Expenses_ExpenseItem","key","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","apply","toConsumableArray","components_Chart_ChartBar","ExpensesChart","_step","chartDataPoints","_iterator","_createForOfIteratorHelper","expenses","s","n","done","getMonth","err","e","f","components_Chart_Chart","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","components_Expenses_ExpensesFilter","selectedYear","Expenses_ExpensesChart","components_Expenses_ExpensesList","DUMMY_EXPENSES","App","setExpenses","components_NewExpense_NewExpense","prevExpenses","concat","components_Expenses_Expenses","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.e7f6fcad.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n \n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    \n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    \n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    \n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <h2>Add Expenses Here</h2>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input\n            type='text'\n            value={enteredTitle} placeholder=\"Enter Title\"\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount} placeholder=\"Enter Amount\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className='new-expense'>\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className='expenses-list'>\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\n\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); \n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div> \n  );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\nimport './App.css'\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n \n\n  return (\n    <div>\n      <h1>EXPENSE MANAGER</h1>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}